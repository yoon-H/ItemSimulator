// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId   Int     @id @default(autoincrement()) @map("userId")
  id       String  @unique @map("id")
  password String  @map("password") @db.Text
  name     String  @unique @map("name")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  characters Characters[]

  @@map("Users")
}

model Characters {
  characterId   Int     @id @default(autoincrement()) @map("characterId")
  userId        Int     @map("userId")
  name          String  @unique @map("name")
  heath         Int @map("health")
  power         Int  @map("power")
  money         Int @map("money")
  
  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("Characters")
}

model Items {
  itemId    Int     @id @default(autoincrement()) @map("itemId")
  name      String  @unique @map("name")
  stat      String  @map("stat") @db.Text
  price     Int   @map("price")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("Items")
}